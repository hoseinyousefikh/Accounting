@model List<AccountingMVC.Models.BankViewModel>

@{
    ViewData["Title"] = "لیست بانک‌های من";
}

<head>
    <link href="~/css/styles.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
</head>

<div class="container d-flex justify-content-center align-items-center my-5">
    <div class="card shadow-lg glass-card">
        <div class="card-body p-4 p-md-5">
            <h2 class="text-center mb-4 text-primary fw-bold">لیست بانک‌های من</h2>

            @if (Model != null && Model.Count > 0)
            {
                <div class="table-responsive scroll-box">
                    <table class="table table-hover mb-0 glass-table">
                        <thead>
                            <tr class="glass-header">
                                <th class="text-center">نام بانک</th>
                                <th class="text-center">شماره کارت</th>
                                <th class="text-center">وضعیت</th>
                                <th class="text-center">عملیات</th>
                            </tr>
                        </thead>
                        <tbody class="scrollable-body">
                            @foreach (var bank in Model)
                            {
                                <tr class="glass-row">
                                    <td class="text-center">@bank.Name</td>
                                    <td class="text-center">@bank.CardNumber</td>
                                    <td class="text-center">
                                        <span class="badge @(bank.IsPublic ? "bg-success" : "bg-info")">
                                            @(bank.IsPublic ? "عمومی" : "خصوصی")
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center gap-2">
                                            <a asp-action="Edit" asp-route-id="@bank.Id" class="btn btn-sm btn-warning glass-btn">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>
                                            <a asp-action="GetDetailBankByUserId" asp-route-id="@bank.Id" class="btn btn-sm btn-info glass-btn">
                                                <i class="bi bi-info-circle"></i>
                                            </a>
                                            <form asp-action="Delete" asp-route-id="@bank.Id" method="post" style="display:inline;"
                                                  onsubmit="return confirm('آیا مطمئن هستید که می‌خواهید این بانک را حذف کنید؟');">
                                                <button type="submit" class="btn btn-sm btn-danger glass-btn">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert glass-alert text-center">
                    <i class="bi bi-bank fs-1 text-muted mb-3"></i>
                    <p class="h5">هیچ بانکی برای نمایش وجود ندارد</p>
                    <p class="text-muted">برای افزودن بانک جدید روی دکمه + پایین کلیک کنید</p>
                </div>
            }
        </div>
    </div>

    <a asp-action="CreateBank" asp-controller="Bank" class="btn btn-success glass-btn floating-btn">
        <i class="bi bi-plus-lg fs-3"></i>
    </a>
</div>

<style>
    /* Vibrant button colors */
    .glass-btn.btn-warning {
        background: rgba(255, 193, 7, 0.6) !important;
        box-shadow: 0 0 8px rgba(255, 193, 7, 0.7);
    }

    .glass-btn.btn-info {
        background: rgba(23, 162, 184, 0.6) !important;
        box-shadow: 0 0 8px rgba(23, 162, 184, 0.7);
    }

    .glass-btn.btn-danger {
        background: rgba(220, 53, 69, 0.6) !important;
        box-shadow: 0 0 8px rgba(220, 53, 69, 0.7);
    }

    /* Scrollable table body */
    .scrollable-body {
        display: block;
        max-height: 350px;
        overflow-y: auto;
    }

    thead, tbody.scrollable-body tr {
        display: table;
        width: 100%;
        table-layout: fixed;
    }

    thead {
        width: calc(100% - 8px);
    }

    /* Existing glassmorphism styles */
    .glass-card {
        width: 100%;
        max-width: 1000px;
        background: rgba(255, 255, 255, 0.15);
        border-radius: 16px;
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.15);
        overflow: hidden;
    }

    .glass-table {
        background: rgba(255, 255, 255, 0.1) !important;
        border-radius: 12px;
        overflow: hidden;
    }

    .glass-header {
        background: rgba(0, 123, 255, 0.3) !important;
        color: #fff !important;
        backdrop-filter: blur(10px);
    }

    .glass-row {
        background: rgba(255, 255, 255, 0.1);
        color: #fff;
        transition: all 0.3s ease;
    }

        .glass-row:hover {
            background: rgba(255, 255, 255, 0.2) !important;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .glass-alert {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        border: none;
        color: #fff;
        padding: 30px;
    }

    .floating-btn {
        position: fixed;
        bottom: 30px;
        right: 30px;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        transition: all 0.3s ease;
    }

        .floating-btn:hover {
            transform: scale(1.1) translateY(-5px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
        }

    .glass-btn {
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 10px;
        color: #fff;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
    }

        .glass-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }

    .badge {
        padding: 8px 12px;
        border-radius: 20px;
        font-weight: 500;
    }

    .text-primary {
        color: #0d6efd !important;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    body {
        background: linear-gradient(135deg, #1e3a8a, #3b82f6);
        min-height: 100vh;
        padding: 20px;
    }

    .gap-2 {
        gap: 8px;
    }
</style>